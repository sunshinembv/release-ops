name: Release (manual)

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: "e.g. 1.0.1"
        required: true
      tag:
        description: "e.g. v1.0.1"
        required: true
      notes:
        description: "Release notes (optional)"
        required: false
      generateReleaseNotes:
        description: "Use auto-generated notes? true/false"
        required: false
        default: "false"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - uses: gradle/actions/setup-gradle@v3

      - name: Bump versionName & versionCode
        run: bash scripts/bump_version.sh "${{ github.event.inputs.versionName }}"

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore: bump version to ${{ github.event.inputs.versionName }}" || echo "no changes"
          git push || true

      - name: Build Debug APK (always)
        run: ./gradlew :app:assembleDebug

      - name: Try build Release Bundle (if signing present)
        if: ${{ secrets.KEYSTORE_BASE64 != '' && secrets.KEYSTORE_PASSWORD != '' && secrets.KEY_ALIAS != '' && secrets.KEY_PASSWORD != '' }}
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > keystore.jks
          echo "SIGNING_STORE_FILE=$GITHUB_WORKSPACE/keystore.jks" >> $GITHUB_ENV
          echo "SIGNING_STORE_PASSWORD=$KEYSTORE_PASSWORD"         >> $GITHUB_ENV
          echo "SIGNING_KEY_ALIAS=$KEY_ALIAS"                       >> $GITHUB_ENV
          echo "SIGNING_KEY_PASSWORD=$KEY_PASSWORD"                 >> $GITHUB_ENV
          ./gradlew :app:bundleRelease

      - name: Create GitHub Release (+upload)
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag }}
          name: ${{ github.event.inputs.versionName }}
          body: ${{ github.event.inputs.notes }}
          allowUpdates: true
          generateReleaseNotes: ${{ github.event.inputs.generateReleaseNotes }}
          artifacts: |
            app/build/outputs/apk/debug/**/*.apk
            app/build/outputs/bundle/release/**/*.aab

      # (опционально) запись в Notion, если секрет/переменная заданы (bootstrap из шага 1 это делает)
      - name: Post to Notion (optional)
        if: ${{ secrets.NOTION_TOKEN != '' && vars.NOTION_DB_RELEASES != '' }}
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DB: ${{ vars.NOTION_DB_RELEASES }}
          TAG:  ${{ github.event.inputs.tag }}
          VER:  ${{ github.event.inputs.versionName }}
          URL:  ${{ format('https://github.com/{0}/releases/tag/{1}', github.repository, github.event.inputs.tag) }}
          NOTES: ${{ github.event.inputs.notes }}
        run: |
          NOW=$(date -u +%FT%TZ)
          DATA=$(jq -n \
            --arg db "$NOTION_DB" \
            --arg ver "$VER" \
            --arg tag "$TAG" \
            --arg url "$URL" \
            --arg notes "${NOTES:-See GitHub release}" \
            --arg now "$NOW" '
            {
              parent: { database_id: $db },
              properties: {
                "Name": { title: [{ type: "text", text: { content: $ver } }] },
                "Tag":  { rich_text: [{ type: "text", text: { content: $tag } }] },
                "Release URL": { url: $url },
                "Released": { date: { start: $now } }
              },
              children: [
                { object:"block", type:"heading_2", heading_2:{ rich_text:[{ type:"text", text:{ content:"Changelog" } }] } },
                { object:"block", type:"paragraph", paragraph:{ rich_text:[{ type:"text", text:{ content:$notes } }] } }
              ]
            }')

          curl -sS -X POST "https://api.notion.com/v1/pages" \
            -H "Authorization: Bearer ${NOTION_TOKEN}" \
            -H "Content-Type: application/json" \
            -H "Notion-Version: 2022-06-28" \
            -d "$DATA" | jq .
